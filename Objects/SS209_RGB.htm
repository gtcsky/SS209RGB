<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\SS209_RGB.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\SS209_RGB.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Dec 02 10:54:23 2021
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; MenuFunction &rArr; brightnessDecFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[23]">ADVTIM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ADVTIM_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[27]">ADC0_IRQHandler</a> from user_adc.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[2f]">ADC_singleContinuousAccMode_config</a> from user_adc.o(.text) referenced from user_adc.o(.text)
 <LI><a href="#[23]">ADVTIM_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[2a]">AWK_IRQHandler</a> from user_awk.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[2d]">CLKTRIM_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[14]">GPIOA_IRQHandler</a> from user_exti.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[15]">GPIOB_IRQHandler</a> from user_exti.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[16]">GPIOC_IRQHandler</a> from user_exti.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[17]">GPIOD_IRQHandler</a> from user_exti.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[10]">HardFault_Handler</a> from cx32l003_it.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1d]">I2C0_IRQHandler</a> from user_i2c.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1e]">I2C_DUMMY_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[26]">IWDT_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[21]">LPTIMER_IRQHandler</a> from user_lptimer.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1a]">LPUART_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[28]">LVD_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[f]">NMI_Handler</a> from cx32l003_it.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[2b]">ONEWIRE_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[24]">PCA_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[22]">PWM_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[12]">PendSV_Handler</a> from cx32l003_it.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[2c]">RTC_MATCH0_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[e]">Reset_Handler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1b]">SPI0COMB_IRQHandler</a> from user_spi.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1c]">SPI_DUMMYCOMB_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[11]">SVC_Handler</a> from cx32l003_it.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[13]">SysTick_Handler</a> from cx32l003_it.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1f]">TIMER10_IRQHandler</a> from user_basetime.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[20]">TIMER11_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[18]">UART0_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[19]">UART1_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[29]">VC_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[25]">WWDT_IRQHandler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[3e]">__main</a> from __main.o(!!!main) referenced from startup_cx32l003.o(.text)
 <LI><a href="#[30]">flashMode1StyleCfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[31]">flashMode1StyleEfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[32]">flashMode1StyleFfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[33]">flashMode2StyleAfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[34]">flashMode2StyleBfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[35]">flashMode2StyleCfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[36]">flashMode2StyleDfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[37]">flashMode2StyleEfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[38]">flashMode2StyleFfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[39]">flashMode3StyleDfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[3a]">flashMode3StyleEfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[3b]">flashMode3StyleFfunc</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[3c]">lightning1Process</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
 <LI><a href="#[3d]">lightning2Process</a> from user_lighteffect.o(.text) referenced from user_lighteffect.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[41]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1cb]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1cc]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1cd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[47]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1ce]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[42]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[1cf]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[1d0]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[1d1]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[1d2]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1d3]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1d4]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[1d5]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1d6]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1d7]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1d8]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[1d9]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[1da]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1db]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[1dc]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[1dd]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1de]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[1df]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1e0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1e1]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[1e2]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[4c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1e3]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1e4]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[1e5]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1e6]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[1e7]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[1e8]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1e9]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[40]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1ea]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[44]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[46]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1eb]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[48]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MenuFunction &rArr; brightnessDecFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1ec]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[1c2]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4b]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1ed]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[4d]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[190]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
</UL>

<P><STRONG><a name="[1ee]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[e]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1ef]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[23]"></a>ADVTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CLKTRIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C_DUMMY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>IWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>LPUART_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ONEWIRE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PCA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RTC_MATCH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI_DUMMYCOMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>VC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1c0]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4f]"></a>ADC_DeInit</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, cx32l003_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphResetCmd
</UL>

<P><STRONG><a name="[115]"></a>ADC_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cx32l003_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[1f0]"></a>ADC_StructInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>ADC_CommonInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, cx32l003_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_CommonInit
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[1f1]"></a>ADC_CommonStructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>ADC_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[1f2]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[1f3]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f4]"></a>ADC_ContinuousModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>ADC_ContinuousConverChannelCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
</UL>

<P><STRONG><a name="[11e]"></a>ADC_ContinuousConverRstCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
</UL>

<P><STRONG><a name="[1f5]"></a>ADC_DisContinuousModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>ADC_GetChannelConversionValue</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>ADC_SetCompareHtValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>ADC_SetCompareLtValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>ADC_CompareControl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>ADC_ITCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[11c]"></a>ADC_AccCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
</UL>

<P><STRONG><a name="[11d]"></a>ADC_AccResultClear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
</UL>

<P><STRONG><a name="[122]"></a>ADC_GetAccResult</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>

<P><STRONG><a name="[1fc]"></a>ADC_GetRISFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_adc.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>ADC_GetMISFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>

<P><STRONG><a name="[11a]"></a>ADC_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
</UL>

<P><STRONG><a name="[124]"></a>AWK_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_awk.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Config
</UL>

<P><STRONG><a name="[126]"></a>AWK_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_awk.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Config
</UL>

<P><STRONG><a name="[127]"></a>AWK_SelClk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_awk.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Config
</UL>

<P><STRONG><a name="[125]"></a>AWK_SetRldval</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_awk.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Feed
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Config
</UL>

<P><STRONG><a name="[129]"></a>AWK_ClearITFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_awk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, cx32l003_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Key_Config
</UL>

<P><STRONG><a name="[52]"></a>FLASH_GetStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[51]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRPConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramByte
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllSectors
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[53]"></a>FLASH_EraseSector</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlash
</UL>

<P><STRONG><a name="[54]"></a>FLASH_EraseAllSectors</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[55]"></a>FLASH_ProgramWord</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[56]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[57]"></a>FLASH_ProgramByte</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[58]"></a>FLASH_OB_WRPConfig</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[1fd]"></a>FLASH_OB_UserConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_flash.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>FLASH_OB_ISPConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_flash.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>FLASH_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cx32l003_flash.o(.text), UNUSED)

<P><STRONG><a name="[200]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_flash.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>FLASH_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlash
</UL>

<P><STRONG><a name="[59]"></a>GPIO_DeInit</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, cx32l003_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphResetCmd
</UL>

<P><STRONG><a name="[201]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>GPIO_Init</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, cx32l003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnIoInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allLedIoAsInputDown
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allLedIoAsInput
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIoInit
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenOutputLow
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueOutputLow
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmOutputLow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolOutputLow
</UL>

<P><STRONG><a name="[202]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[203]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>GPIO_DBSyncCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>GPIO_DBPinSyncCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>GPIO_DBClkCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[207]"></a>GPIO_SetDBClk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
</UL>

<P><STRONG><a name="[208]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnIoInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdGpioInit
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessDecFunc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessIncFunc
</UL>

<P><STRONG><a name="[b2]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnIoInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenOutputLow
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueOutputLow
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmOutputLow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolOutputLow
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessDecFunc
</UL>

<P><STRONG><a name="[209]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>GPIO_PinPuPdCmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>GPIO_PortDRCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cx32l003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cx32l003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEST_SETLPTIMERGATE
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIoInit
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCPinAFSet
</UL>

<P><STRONG><a name="[5a]"></a>I2C_DeInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, cx32l003_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphResetCmd
</UL>

<P><STRONG><a name="[5b]"></a>I2C_Init</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, cx32l003_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[20f]"></a>I2C_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>I2C_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[210]"></a>I2C_MasterSendCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[16c]"></a>I2C_GenerateSTART</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveSendACK
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterRecive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterSend
</UL>

<P><STRONG><a name="[16e]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveSendACK
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterRecive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterSend
</UL>

<P><STRONG><a name="[16d]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveSendACK
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterRecive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterSend
</UL>

<P><STRONG><a name="[211]"></a>I2C_OwnAddressConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[212]"></a>I2C_GeneralCallCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterRecive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterSend
</UL>

<P><STRONG><a name="[170]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterRecive
</UL>

<P><STRONG><a name="[213]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>I2C_ReadRegister</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>I2C_NACKPositionConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>I2C_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>I2C_GetLastEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_i2c.o(.text), UNUSED)

<P><STRONG><a name="[f]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HardFault_Handler &rArr; StoreExceptions2Flash &rArr; writeEepromData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_it.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>

<P><STRONG><a name="[64]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_it.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>

<P><STRONG><a name="[65]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_it.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>

<P><STRONG><a name="[11]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[218]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[219]"></a>LPTIMER_ReadCnt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>LPTIMER_Init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
</UL>

<P><STRONG><a name="[92]"></a>LPTIMER_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_Sleep
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_DeepSleep
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryNormalModeChk
</UL>

<P><STRONG><a name="[21a]"></a>LPTIMER_TogCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>LPTIMER_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
</UL>

<P><STRONG><a name="[21b]"></a>LPTIMER_GetWTFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>LPTIMER_BGloadConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cx32l003_lptimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTIMER_BGloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
</UL>

<P><STRONG><a name="[9a]"></a>LPTIMER_LoadConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cx32l003_lptimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTIMER_LoadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
</UL>

<P><STRONG><a name="[21c]"></a>LPTIMER_GetITStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>LPTIMER_ClearITFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_lptimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_IRQHandler
</UL>

<P><STRONG><a name="[21d]"></a>RCC_DeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>RCC_HIRCTrim</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>RCC_LIRCTrim</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>RCC_SetHXTDrive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[221]"></a>RCC_SetLXTDrive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>RCC_WaitForHIRCStable</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[223]"></a>RCC_WaitForHXTStable</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[224]"></a>RCC_WaitForLIRCStable</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>RCC_WaitForLXTStable</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>RCC_LXTCmd</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>RCC_SetX32KPort</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>RCC_SetM0IRQLatency</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>RCC_SystemTickTimerConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>RCC_SetSystemTickTimerCoreRefClockcmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>RCC_SysclkCmd</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, cx32l003_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_SysclkCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSystemLIRC
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSystemHIRC
</UL>

<P><STRONG><a name="[22b]"></a>RCC_SelSysclk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>RCC_SysclkOutputConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>RCC_SysclkOutputCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>RCC_SysclkFclkDiv</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>RCC_GetSysclkSource</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>RCC_SetHclkDiv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[231]"></a>RCC_SetPclkDiv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>RCC_APBPeriphClockCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>RCC_PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_DeInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DeInit
</UL>

<P><STRONG><a name="[234]"></a>RCC_RTCResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>RCC_ResetCmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>RCC_SetIoMux</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>SPI_DeInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cx32l003_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphResetCmd
</UL>

<P><STRONG><a name="[143]"></a>SPI_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userSpiInit
</UL>

<P><STRONG><a name="[238]"></a>SPI_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cx32l003_spi.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>SPI_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSpi
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userSpiInit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSpi
</UL>

<P><STRONG><a name="[13e]"></a>SPI_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendByte
</UL>

<P><STRONG><a name="[239]"></a>SPI_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_spi.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIoInit
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>

<P><STRONG><a name="[23a]"></a>SPI_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_spi.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>SYSCTRL_DeInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cx32l003_syscon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphResetCmd
</UL>

<P><STRONG><a name="[23b]"></a>SYSCTRL_CortexM0LockUpCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>SYSCTRL_DeepsleepPortITCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>SYSCTRL_ActiveSleepPortITCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>SYSCTRL_SPICSConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>SYSCTRL_TIM10_GateConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[240]"></a>SYSCTRL_TIM11_GateConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>SYSCTRL_IPTIM_GateConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEST_SETLPTIMERGATE
</UL>

<P><STRONG><a name="[241]"></a>SYSCTRL_PCACapMuxConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>SYSCTRL_TIM1_InputSignalConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>SYSCTRL_TIM1_ETRSignalConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>SYSCTRL_TIM1_SetBreakSTM</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>SYSCTRL_TIM1_SetBreakZERO</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>SYSCTRL_TIM2_InputSignalConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>SYSCTRL_TIM2_ETRSignalConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>SYSCTRL_LPUART_CLKConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>SYSCTRL_LPUART_CLKCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, cx32l003_syscon.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>TIM_DeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, cx32l003_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphResetCmd
</UL>

<P><STRONG><a name="[78]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, cx32l003_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[24a]"></a>TIM_StructInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>TIM_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[24b]"></a>TIM_TogCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[24c]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>TIM_SelectGatePolarity</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>TIM_SetClockDivision</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>TIM_GetPrescaler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>TIM_SetTimerLoadRegister</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[250]"></a>TIM_GetTimerLoadRegister</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[251]"></a>TIM_SetCountRegister</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[1a7]"></a>TIM_GetCountRegister</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomUint8
</UL>

<P><STRONG><a name="[252]"></a>TIM_GetITSourceFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>TIM_GetITShieldFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_timer.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>TIM_ClearITFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER10_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Key_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userSpiInit
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Config
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_NVIC_Config
</UL>

<P><STRONG><a name="[7b]"></a>NVIC_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Key_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userSpiInit
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Config
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_NVIC_Config
</UL>

<P><STRONG><a name="[254]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[257]"></a>ADVTIM_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>ADVTIM_TimeBaseInit</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, cx32l003_advtim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADVTIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
</UL>

<P><STRONG><a name="[177]"></a>ADVTIM_OC1Init</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, cx32l003_advtim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADVTIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
</UL>

<P><STRONG><a name="[178]"></a>ADVTIM_OC2Init</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, cx32l003_advtim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADVTIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
</UL>

<P><STRONG><a name="[179]"></a>ADVTIM_OC3Init</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, cx32l003_advtim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADVTIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
</UL>

<P><STRONG><a name="[17a]"></a>ADVTIM_OC4Init</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, cx32l003_advtim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADVTIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
</UL>

<P><STRONG><a name="[6f]"></a>ADVTIM_SetIC4Prescaler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ICInit
</UL>

<P><STRONG><a name="[6e]"></a>ADVTIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ICInit
</UL>

<P><STRONG><a name="[6d]"></a>ADVTIM_SetIC2Prescaler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMIConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ICInit
</UL>

<P><STRONG><a name="[6b]"></a>ADVTIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMIConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ICInit
</UL>

<P><STRONG><a name="[69]"></a>ADVTIM_ICInit</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SetIC1Prescaler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SetIC2Prescaler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SetIC3Prescaler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SetIC4Prescaler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[70]"></a>ADVTIM_PWMIConfig</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SetIC1Prescaler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SetIC2Prescaler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[258]"></a>ADVTIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>ADVTIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>ADVTIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>ADVTIM_ICStructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>ADVTIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>ADVTIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
</UL>

<P><STRONG><a name="[17c]"></a>ADVTIM_CtrlPWMOutputs</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
</UL>

<P><STRONG><a name="[25d]"></a>ADVTIM_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>ADVTIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>ADVTIM_DMAConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>ADVTIM_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>ADVTIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>ADVTIM_SelectInputTrigger</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_TIxExternalClockConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[71]"></a>ADVTIM_ITRxExternalClockConfig</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[73]"></a>ADVTIM_TIxExternalClockConfig</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_SelectInputTrigger
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[75]"></a>ADVTIM_ETRConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ETRClockMode2Config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[74]"></a>ADVTIM_ETRClockMode1Config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ETRConfig
</UL>

<P><STRONG><a name="[76]"></a>ADVTIM_ETRClockMode2Config</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ETRConfig
</UL>

<P><STRONG><a name="[262]"></a>ADVTIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>ADVTIM_CounterModeConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>ADVTIM_EncoderInterfaceConfig</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[265]"></a>ADVTIM_ForcedOC1Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>ADVTIM_ForcedOC2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>ADVTIM_ForcedOC3Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>ADVTIM_ForcedOC4Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[269]"></a>ADVTIM_ARRPreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>ADVTIM_SelectCOM</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>ADVTIM_SelectCCDMA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>ADVTIM_CCPreloadControl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>ADVTIM_OC1PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>ADVTIM_OC2PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>ADVTIM_OC3PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>ADVTIM_OC4PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[271]"></a>ADVTIM_OC1FastConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>ADVTIM_OC2FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[273]"></a>ADVTIM_OC3FastConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[274]"></a>ADVTIM_OC4FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>ADVTIM_ClearOC1Ref</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[276]"></a>ADVTIM_ClearOC2Ref</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[277]"></a>ADVTIM_ClearOC3Ref</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>ADVTIM_ClearOC4Ref</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[279]"></a>ADVTIM_OC1PolarityConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[27a]"></a>ADVTIM_OC1NPolarityConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[27b]"></a>ADVTIM_OC2PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[27c]"></a>ADVTIM_OC2NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[27d]"></a>ADVTIM_OC3PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>ADVTIM_OC3NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[27f]"></a>ADVTIM_OC4PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[280]"></a>ADVTIM_CCxCmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[281]"></a>ADVTIM_CCxNCmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[282]"></a>ADVTIM_SelectOCxM</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[283]"></a>ADVTIM_UpdateDisableConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[284]"></a>ADVTIM_UpdateRequestConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>ADVTIM_SelectHallSensor</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[286]"></a>ADVTIM_SelectOnePulseMode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[287]"></a>ADVTIM_SelectOutputTrigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[288]"></a>ADVTIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>ADVTIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[28a]"></a>ADVTIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>ADVTIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[28c]"></a>ADVTIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>ADVTIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[28e]"></a>ADVTIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>ADVTIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[290]"></a>ADVTIM_SetClockDivision</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[291]"></a>ADVTIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>ADVTIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>ADVTIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[294]"></a>ADVTIM_GetCapture4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[295]"></a>ADVTIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[296]"></a>ADVTIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[297]"></a>ADVTIM_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[298]"></a>ADVTIM_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[299]"></a>ADVTIM_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[29a]"></a>ADVTIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cx32l003_advtim.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>BASIC_TIM_Mode_Config</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, user_basetime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BASIC_TIM_Mode_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userNVICPrioirySetting
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetTimerLoadRegister
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>TIMER10_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_basetime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>userNVICPrioirySetting</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, user_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = userNVICPrioirySetting
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Key_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[80]"></a>EXTI_Key_Config</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, user_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EXTI_Key_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userNVICPrioirySetting
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>GPIOA_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOA_IRQHandler &rArr; GPIO_IRQHandler &rArr; entryNormalModeChk
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>GPIOB_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOB_IRQHandler &rArr; GPIO_IRQHandler &rArr; entryNormalModeChk
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>GPIOC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOC_IRQHandler &rArr; GPIO_IRQHandler &rArr; entryNormalModeChk
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GPIOD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOD_IRQHandler &rArr; GPIO_IRQHandler &rArr; entryNormalModeChk
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[29b]"></a>readInternalFlashData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_internalflash.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>readInternalFlashWrod</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_internalflash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSystemLIRC
</UL>

<P><STRONG><a name="[29c]"></a>readInternalFlashByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_internalflash.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>EraseFlash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_internalflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[88]"></a>clearExceptions</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_internalflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = clearExceptions &rArr; writeEepromData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeEepromData
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[61]"></a>StoreExceptions2Flash</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, user_internalflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = StoreExceptions2Flash &rArr; writeEepromData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeEepromData
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateChecksum
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSaveFunc
</UL>

<P><STRONG><a name="[8d]"></a>LoadExceptionsFromFlash</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, user_internalflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LoadExceptionsFromFlash &rArr; readEepromData &rArr; MasterReadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEepromData
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateChecksum
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exceptionsCheck
</UL>

<P><STRONG><a name="[90]"></a>exceptionsCheck</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_internalflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = exceptionsCheck &rArr; LoadExceptionsFromFlash &rArr; readEepromData &rArr; MasterReadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadExceptionsFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>Enter_DeepSleep</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lptimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Enter_DeepSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
</UL>

<P><STRONG><a name="[93]"></a>Enter_Sleep</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lptimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Cmd
</UL>

<P><STRONG><a name="[94]"></a>TEST_SETLPTIMERGATE</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, user_lptimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_IPTIM_GateConfig
</UL>

<P><STRONG><a name="[97]"></a>LPTIMER_Config</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, user_lptimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LPTIMER_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_LoadConfig
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_BGloadConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_ITConfig
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Cmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>LPTIMER_IRQHandler</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, user_lptimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPTIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_ClearITFlag
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>setSystemHIRC</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, user_sysclock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setSystemHIRC &rArr; RCC_SysclkCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysclkCmd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemClkSet
</UL>

<P><STRONG><a name="[a2]"></a>setSystemLIRC</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, user_sysclock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = setSystemLIRC &rArr; RCC_SysclkCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysclkCmd
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInternalFlashWrod
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemClkSet
</UL>

<P><STRONG><a name="[a5]"></a>systemClkSelect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, user_sysclock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemClkSet
</UL>

<P><STRONG><a name="[a4]"></a>systemClkSet</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, user_sysclock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = systemClkSet &rArr; setSystemHIRC &rArr; RCC_SysclkCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemClkSelect
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSystemLIRC
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSystemHIRC
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>main</STRONG> (Thumb, 360 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; MenuFunction &rArr; brightnessDecFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSWD2NormalIO
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLedIoAf
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SWDMode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetEntrySleepTime
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBattInfoImmediately
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnIoInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerDataInit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funcKeyTask
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderCheck
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRealEntryPowerDownMode
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMMODE_Config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemClkSet
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exceptionsCheck
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Key_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[bb]"></a>keyReleased</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyReleaseCheck
</UL>

<P><STRONG><a name="[bd]"></a>setKeyPressedFlag</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyPressCheck
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSwitchKeyPressedFlag
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPowerKeyPressedFlag
</UL>

<P><STRONG><a name="[ba]"></a>keyReleaseCheck</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyReleased
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funcKeyTask
</UL>

<P><STRONG><a name="[bc]"></a>keyPressCheck</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = keyPressCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setKeyPressedFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funcKeyTask
</UL>

<P><STRONG><a name="[c4]"></a>clearPowerKeyInfo</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
</UL>

<P><STRONG><a name="[29d]"></a>fastKeyCheck</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_key.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>funcKeyTask</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = funcKeyTask &rArr; keyPressCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyPressCheck
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyReleaseCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>setPowerKeyPressedFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setKeyPressedFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>setSwitchKeyPressedFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setKeyPressedFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>abandonAllDectInfo</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDect
</UL>

<P><STRONG><a name="[be]"></a>encoderDect</STRONG> (Thumb, 572 bytes, Stack size 20 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = encoderDect
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abandonAllDectInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderCheck
</UL>

<P><STRONG><a name="[b7]"></a>encoderCheck</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = encoderCheck &rArr; encoderDect
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDect
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29e]"></a>getEncoderStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_key.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>powerOnIoInit</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = powerOnIoInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>resetEntrySleepTime</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryNormalModeChk
</UL>

<P><STRONG><a name="[106]"></a>resetStoreInfoTimer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
</UL>

<P><STRONG><a name="[83]"></a>entryNormalModeChk</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = entryNormalModeChk
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_Cmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetEntrySleepTime
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_IRQHandler
</UL>

<P><STRONG><a name="[c8]"></a>clrPowerTimerOutStts</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
</UL>

<P><STRONG><a name="[c0]"></a>systemPowerDown</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = systemPowerDown &rArr; lcdEnterSleep &rArr; clear &rArr; OLED_ShowOnePage &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearPowerKeyInfo
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_DeepSleep
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffect
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdEnterSleep
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSpi
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemOffByManual
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
</UL>

<P><STRONG><a name="[29f]"></a>fucnPer25ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_menu.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>brakeBattDetProcess</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
</UL>

<P><STRONG><a name="[c5]"></a>autoSaveFunc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = autoSaveFunc &rArr; StoreExceptions2Flash &rArr; writeEepromData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
</UL>

<P><STRONG><a name="[c6]"></a>fucnPer50ms</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fucnPer50ms &rArr; autoSaveFunc &rArr; StoreExceptions2Flash &rArr; writeEepromData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSaveFunc
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brakeBattDetProcess
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrPowerTimerOutStts
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearPowerKeyInfo
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetEntrySleepTime
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_DeepSleep
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdEnterSleep
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[2a0]"></a>fucnPer100ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_menu.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>fucnPer500ms</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = fucnPer500ms &rArr; batterDisplay &rArr; OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[cb]"></a>getOriginalPWMData</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, user_menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[cc]"></a>getSystemperature</STRONG> (Thumb, 414 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getSystemperature &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
</UL>

<P><STRONG><a name="[d0]"></a>checkTemperature</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = checkTemperature &rArr; tryTemperatureConvert &rArr; ADC_singleContinuousAccMode_config &rArr; ADC_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryTemperatureConvert
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer1s
</UL>

<P><STRONG><a name="[d2]"></a>hotFuncDeinit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hotFuncDeinit &rArr; batterDisplay &rArr; OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemOffByManual
</UL>

<P><STRONG><a name="[d3]"></a>systemOffByManual</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = systemOffByManual &rArr; systemPowerDown &rArr; lcdEnterSleep &rArr; clear &rArr; OLED_ShowOnePage &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hotFuncDeinit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRealEntryPowerDownMode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[d5]"></a>checkSystemHot</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = checkSystemHot &rArr; systemOffByManual &rArr; systemPowerDown &rArr; lcdEnterSleep &rArr; clear &rArr; OLED_ShowOnePage &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemOffByManual
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hotFuncDeinit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemperature
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[d7]"></a>fucnPer1s</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = fucnPer1s &rArr; updateHotDisplay &rArr; OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTemperature
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHotDisplay
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startBattVoltDect
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[da]"></a>calcBattVolt</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = calcBattVolt &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBattInfoImmediately
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battInfoProcess
</UL>

<P><STRONG><a name="[af]"></a>readBattInfoImmediately</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = readBattInfoImmediately &rArr; startBattVoltDect &rArr; ADC_singleContinuousAccMode_config &rArr; ADC_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startBattVoltDect
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[e2]"></a>processBattLevel</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = processBattLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
</UL>

<P><STRONG><a name="[de]"></a>battVoltCompensation</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = battVoltCompensation &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcVoltCompensation
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
</UL>

<P><STRONG><a name="[e0]"></a>adcVoltCompensation</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
</UL>

<P><STRONG><a name="[e1]"></a>setBattLevel</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = setBattLevel &rArr; battVoltCompensation &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processBattLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battInfoProcess
</UL>

<P><STRONG><a name="[e3]"></a>chkLightEffectModeVoltCompensation</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = chkLightEffectModeVoltCompensation &rArr; __aeabi_cfrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battInfoProcess
</UL>

<P><STRONG><a name="[e5]"></a>battInfoProcess</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = battInfoProcess &rArr; setBattLevel &rArr; battVoltCompensation &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[2a1]"></a>resetBrakeBattDet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_menu.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>colorTemperatureAdjustSlowFunc</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = colorTemperatureAdjustSlowFunc &rArr; setWarmData &rArr; setWarmDuty &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[a9]"></a>powerDataInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, user_menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[b3]"></a>updateLEDStts</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorInRgbMode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTargeColorTempData
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessDecFunc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessIncFunc
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[f2]"></a>factoryModeCoolDownFunc</STRONG> (Thumb, 750 bytes, Stack size 24 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = factoryModeCoolDownFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemOffByManual
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBattInfoImmediately
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerDataInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearExceptions
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryVoltDisplay
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeTemperatureDisplay
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFactoryMode
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[b9]"></a>fucnPer5ms</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = fucnPer5ms &rArr; factoryModeCoolDownFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer1s
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemOffByManual
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer500ms
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightEffectFunc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkAdcConvertRetry
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorTemperatureAdjustSlowFunc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battInfoProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fe]"></a>publicDecFunc</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = publicDecFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessDecFunc
</UL>

<P><STRONG><a name="[fb]"></a>publicIncFunc</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = publicIncFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessIncFunc
</UL>

<P><STRONG><a name="[fa]"></a>brightnessIncFunc</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = brightnessIncFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;publicIncFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
</UL>

<P><STRONG><a name="[fd]"></a>brightnessDecFunc</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = brightnessDecFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;publicDecFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
</UL>

<P><STRONG><a name="[b8]"></a>MenuFunction</STRONG> (Thumb, 820 bytes, Stack size 40 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = MenuFunction &rArr; brightnessDecFunc &rArr; updateLEDStts &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetStoreInfoTimer
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetEntrySleepTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;versionDisplay
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSaturationDisplay
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBValueDisplay
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessDecFunc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessIncFunc
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;publicIncFunc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;publicDecFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>onChargingIconInPowerOffMode</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, user_menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdExitSleep
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[2a2]"></a>powerDownFromChageMode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_menu.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>checkRealEntryPowerDownMode</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = checkRealEntryPowerDownMode &rArr; systemOffByManual &rArr; systemPowerDown &rArr; lcdEnterSleep &rArr; clear &rArr; OLED_ShowOnePage &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemOffByManual
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a3]"></a>absSubUint16</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_menu.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>getChargingCurrentByVolt</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, user_menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[a8]"></a>setSWD2NormalIO</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>set2SWDMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>setCoolOutputLow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setCoolOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoCoolSetInput
</UL>

<P><STRONG><a name="[10d]"></a>setWarmOutputLow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoWarmSetInput
</UL>

<P><STRONG><a name="[10e]"></a>setBlueOutputLow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoBlueSetInput
</UL>

<P><STRONG><a name="[10f]"></a>setGreenOutputLow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoGreenSetLow
</UL>

<P><STRONG><a name="[110]"></a>ADCPinAFSet</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADCPinAFSet &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[111]"></a>ADC_NVIC_Config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MutiMode_Config
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[113]"></a>adcChlCMD2adcIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readADCResultFromMutiChls
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcChlCMD2adcAdcChl
</UL>

<P><STRONG><a name="[112]"></a>adcChlCMD2adcAdcChl</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adcChlCMD2adcAdcChl
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcChlCMD2adcIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SignalMode_Config
</UL>

<P><STRONG><a name="[114]"></a>ADC_SignalMode_Config</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, user_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITCmd
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcChlCMD2adcAdcChl
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_NVIC_Config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCPinAFSet
</UL>

<P><STRONG><a name="[2f]"></a>ADC_singleContinuousAccMode_config</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ADC_singleContinuousAccMode_config &rArr; ADC_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AccResultClear
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AccCmd
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITCmd
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ContinuousConverRstCmd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ContinuousConverChannelCmd
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcChlCMD2adcAdcChl
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcChlCMD2adcIndex
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_NVIC_Config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCPinAFSet
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryTemperatureConvert
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startBattVoltDect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_adc.o(.text)
</UL>
<P><STRONG><a name="[11f]"></a>ADC_MutiMode_Config</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, user_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AccResultClear
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AccCmd
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITCmd
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ContinuousConverRstCmd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ContinuousConverChannelCmd
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_NVIC_Config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCPinAFSet
</UL>

<P><STRONG><a name="[120]"></a>readADCResultFromMutiChls</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, user_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcChlCMD2adcIndex
</UL>

<P><STRONG><a name="[d8]"></a>startBattVoltDect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = startBattVoltDect &rArr; ADC_singleContinuousAccMode_config &rArr; ADC_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer1s
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBattInfoImmediately
</UL>

<P><STRONG><a name="[d1]"></a>tryTemperatureConvert</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tryTemperatureConvert &rArr; ADC_singleContinuousAccMode_config &rArr; ADC_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_singleContinuousAccMode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTemperature
</UL>

<P><STRONG><a name="[f9]"></a>checkAdcConvertRetry</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkAdcConvertRetry
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[27]"></a>ADC0_IRQHandler</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, user_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetMISFlagStatus
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAccResult
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ContinuousConverChannelCmd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[123]"></a>AWK_Config</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, user_awk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_SetRldval
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_SelClk
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Cmd
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>

<P><STRONG><a name="[128]"></a>AWK_Feed</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_awk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_SetRldval
</UL>

<P><STRONG><a name="[2a]"></a>AWK_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, user_awk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AWK_IRQHandler &rArr; entryNormalModeChk
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWK_ClearITFlag
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryNormalModeChk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[12a]"></a>lcdGpioInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcdGpioInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
</UL>

<P><STRONG><a name="[12b]"></a>OLED_Set_Pos</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowOneSegment
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearFromTo
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowCHinese
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowOnePage
</UL>

<P><STRONG><a name="[12d]"></a>OLED_ShowOnePage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OLED_ShowOnePage &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>

<P><STRONG><a name="[d4]"></a>clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = clear &rArr; OLED_ShowOnePage &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowOnePage
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemOffByManual
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;versionDisplay
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdEnterSleep
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFactoryMode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[c1]"></a>lcdEnterSleep</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcdEnterSleep &rArr; clear &rArr; OLED_ShowOnePage &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdCommand
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay100us
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer50ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
</UL>

<P><STRONG><a name="[109]"></a>lcdExitSleep</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, user_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onChargingIconInPowerOffMode
</UL>

<P><STRONG><a name="[130]"></a>OLED_ShowCHinese</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledTestModeChineseString
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batteryPercentDisplay
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHotDisplay
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
</UL>

<P><STRONG><a name="[131]"></a>OLED_ShowChar</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexDigitDis
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batteryPercentDisplay
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSaturationDisplay
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBValueDisplay
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryVoltDisplay
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeTemperatureDisplay
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[132]"></a>batteryPercentDisplay</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, user_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowCHinese
</UL>

<P><STRONG><a name="[133]"></a>updateChargingIcon</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, user_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
</UL>

<P><STRONG><a name="[ca]"></a>batterDisplay</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = batterDisplay &rArr; OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateChargingIcon
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowCHinese
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hotFuncDeinit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer500ms
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[101]"></a>updateArrowDisplay</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = updateArrowDisplay &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[104]"></a>updateHuesDisplay</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = updateHuesDisplay &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[105]"></a>updateRGBValueDisplay</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = updateRGBValueDisplay &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[103]"></a>updateSaturationDisplay</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = updateSaturationDisplay &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[134]"></a>getBrightnessY</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[fc]"></a>updateBrightnessDisplay</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = updateBrightnessDisplay &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBrightnessY
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessDecFunc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightnessIncFunc
</UL>

<P><STRONG><a name="[136]"></a>oled_pow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[135]"></a>getNumLen</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getNumLen
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[f7]"></a>OLED_ShowNum</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNumLen
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_pow
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[102]"></a>updateColorTempDisplay</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = updateColorTempDisplay &rArr; OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[2a4]"></a>updateLightEffectDisplay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_lcd.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>OLED_ShowString</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;versionDisplay
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFactoryMode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[137]"></a>displayFloat</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, user_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_pow
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[d9]"></a>updateHotDisplay</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = updateHotDisplay &rArr; OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowCHinese
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer1s
</UL>

<P><STRONG><a name="[100]"></a>updateSceneDisplay</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = updateSceneDisplay &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[138]"></a>clearFromTo</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = clearFromTo &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearDisplayArea
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[139]"></a>clearDisplayArea</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = clearDisplayArea &rArr; clearFromTo &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearFromTo
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[ff]"></a>displaySystemMenu</STRONG> (Thumb, 480 bytes, Stack size 16 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = displaySystemMenu &rArr; updateColorTempDisplay &rArr; OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearDisplayArea
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearFromTo
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBrightnessY
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowCHinese
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSaturationDisplay
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBValueDisplay
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onChargingIconInPowerOffMode
</UL>

<P><STRONG><a name="[b4]"></a>powerOnLcdInit</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = powerOnLcdInit &rArr; displaySystemMenu &rArr; updateColorTempDisplay &rArr; OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdCommand
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay100us
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdGpioInit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13a]"></a>OLED_ShowOneSegment</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, user_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>

<P><STRONG><a name="[13b]"></a>HexDigitDis</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, user_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>

<P><STRONG><a name="[107]"></a>versionDisplay</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = versionDisplay &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
</UL>

<P><STRONG><a name="[f4]"></a>factoryModeTemperatureDisplay</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = factoryModeTemperatureDisplay &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[13c]"></a>oledTestModeChineseString</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = oledTestModeChineseString &rArr; OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowCHinese
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFactoryMode
</UL>

<P><STRONG><a name="[f3]"></a>displayFactoryMode</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = displayFactoryMode &rArr; oledTestModeChineseString &rArr; OLED_ShowCHinese &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledTestModeChineseString
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[f5]"></a>factoryVoltDisplay</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, user_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = factoryVoltDisplay &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[169]"></a>ddl_memclr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_ddl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLEDStyleParams
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[12f]"></a>delay100us</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, user_ddl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdEnterSleep
</UL>

<P><STRONG><a name="[13d]"></a>SPI_SendByte</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, user_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>

<P><STRONG><a name="[13f]"></a>WriteData</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, user_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SSOutputCmd
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendByte
</UL>

<P><STRONG><a name="[2a5]"></a>ReadData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_spi.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>spiIoInit</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, user_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SSOutputCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userSpiInit
</UL>

<P><STRONG><a name="[142]"></a>userSpiInit</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, user_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIoInit
</UL>

<P><STRONG><a name="[c2]"></a>disableSpi</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disableSpi
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
</UL>

<P><STRONG><a name="[145]"></a>enableSpi</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>

<P><STRONG><a name="[1b]"></a>SPI0COMB_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, user_spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[146]"></a>IoCoolSetInput</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IoCoolSetInput &rArr; setCoolOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolOutputLow
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueDuty
</UL>

<P><STRONG><a name="[147]"></a>IoWarmSetInput</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmOutputLow
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenDuty
</UL>

<P><STRONG><a name="[148]"></a>IoBlueSetInput</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IoBlueSetInput &rArr; setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueOutputLow
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolDuty
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmChDefault
</UL>

<P><STRONG><a name="[149]"></a>IoGreenSetLow</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenOutputLow
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmDuty
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmChDefault
</UL>

<P><STRONG><a name="[14a]"></a>PwmChDefault</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PwmChDefault &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoGreenSetLow
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoBlueSetInput
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLedIoAf
</UL>

<P><STRONG><a name="[14b]"></a>allLedIoAsInput</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, user_color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[14c]"></a>allLedIoAsInputDown</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, user_color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[ab]"></a>setLedIoAf</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setLedIoAf &rArr; PwmChDefault &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmChDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14d]"></a>setCoolDuty</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = setCoolDuty &rArr; IoBlueSetInput &rArr; setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoBlueSetInput
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
</UL>

<P><STRONG><a name="[150]"></a>setWarmDuty</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = setWarmDuty &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoGreenSetLow
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
</UL>

<P><STRONG><a name="[151]"></a>setBlueDuty</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = setBlueDuty &rArr; IoCoolSetInput &rArr; setCoolOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoCoolSetInput
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
</UL>

<P><STRONG><a name="[152]"></a>setGreenDuty</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoWarmSetInput
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
</UL>

<P><STRONG><a name="[ac]"></a>setCoolData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setCoolData &rArr; setCoolDuty &rArr; IoBlueSetInput &rArr; setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning2Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCfunc
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadLedStatus
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorTemperatureAdjustSlowFunc
</UL>

<P><STRONG><a name="[ad]"></a>setWarmData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setWarmData &rArr; setWarmDuty &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFfunc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEfunc
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadLedStatus
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorTemperatureAdjustSlowFunc
</UL>

<P><STRONG><a name="[153]"></a>setRedDuty</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, user_color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
</UL>

<P><STRONG><a name="[154]"></a>setRedData</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setRedData &rArr; updatePWMChlDuty &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleCfunc
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadLedStatus
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>

<P><STRONG><a name="[155]"></a>setGreenData</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadLedStatus
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>

<P><STRONG><a name="[157]"></a>setBlueData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setBlueData &rArr; setBlueDuty &rArr; IoCoolSetInput &rArr; setCoolOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadLedStatus
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>

<P><STRONG><a name="[ea]"></a>turnOffColorTempLamp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = turnOffColorTempLamp &rArr; setWarmData &rArr; setWarmDuty &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffect
</UL>

<P><STRONG><a name="[158]"></a>updateColor</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = updateColor &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleDfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorInRgbMode
</UL>

<P><STRONG><a name="[159]"></a>hsb2Rgb</STRONG> (Thumb, 692 bytes, Stack size 48 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleDfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
</UL>

<P><STRONG><a name="[ec]"></a>turnOffRGBLamp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffect
</UL>

<P><STRONG><a name="[ef]"></a>updateColorTemp</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = updateColorTemp &rArr; setWarmData &rArr; setWarmDuty &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
</UL>

<P><STRONG><a name="[ed]"></a>setTargeColorTempData</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = setTargeColorTempData &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
</UL>

<P><STRONG><a name="[eb]"></a>updateRGBLamp</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
</UL>

<P><STRONG><a name="[f0]"></a>updateColorInRgbMode</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, user_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = updateColorInRgbMode &rArr; updateColor &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
</UL>

<P><STRONG><a name="[15c]"></a>setI2cSdaInput</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SDA
</UL>

<P><STRONG><a name="[15b]"></a>setI2cSdaOutput</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SDA
</UL>

<P><STRONG><a name="[15a]"></a>IIC_SDA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setI2cSdaOutput
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setI2cSdaInput
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
</UL>

<P><STRONG><a name="[15d]"></a>IIC_Start</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterWriteBytes
</UL>

<P><STRONG><a name="[15e]"></a>IIC_Stop</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setI2cSdaOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterWriteBytes
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[15f]"></a>IIC_Ack</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SDA
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[160]"></a>IIC_NAck</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SDA
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[161]"></a>IIC_Wait_Ack</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SDA
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setI2cSdaOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterWriteBytes
</UL>

<P><STRONG><a name="[162]"></a>IIC_Send_Byte</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterWriteBytes
</UL>

<P><STRONG><a name="[163]"></a>IIC_Read_Byte</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SDA
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
</UL>

<P><STRONG><a name="[164]"></a>MasterWriteBytes</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeEepromData
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;riteSigmaCtrlRegister
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2cData
</UL>

<P><STRONG><a name="[165]"></a>MasterReadBytes</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MasterReadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEepromData
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSigmaCtrlRegister
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2cData
</UL>

<P><STRONG><a name="[168]"></a>Master_IIC_Mode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[166]"></a>IIC_Init</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, user_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userNVICPrioirySetting
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Master_IIC_Mode
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
</UL>

<P><STRONG><a name="[2a6]"></a>SLAVE_IIC_Send</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, user_i2c.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>I2C0_IRQHandler_MasterSend</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C0_IRQHandler_MasterSend
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[16f]"></a>I2C0_IRQHandler_MasterRecive</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C0_IRQHandler_MasterRecive
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[171]"></a>SlaveSendACK</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, user_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
</UL>

<P><STRONG><a name="[1d]"></a>I2C0_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C0_IRQHandler &rArr; I2C0_IRQHandler_MasterRecive
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterRecive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler_MasterSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[172]"></a>readI2cData</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, user_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
</UL>

<P><STRONG><a name="[173]"></a>readSigmaCtrlRegister</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, user_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
</UL>

<P><STRONG><a name="[174]"></a>writeI2cData</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterWriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdData
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeLcdCommand
</UL>

<P><STRONG><a name="[12c]"></a>writeLcdCommand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = writeLcdCommand &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2cData
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerOnLcdInit
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdExitSleep
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdEnterSleep
</UL>

<P><STRONG><a name="[12e]"></a>writeLcdData</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = writeLcdData &rArr; writeI2cData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2cData
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowOneSegment
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearFromTo
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowCHinese
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowOnePage
</UL>

<P><STRONG><a name="[175]"></a>riteSigmaCtrlRegister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterWriteBytes
</UL>

<P><STRONG><a name="[89]"></a>writeEepromData</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = writeEepromData &rArr; MasterWriteBytes &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterWriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearExceptions
</UL>

<P><STRONG><a name="[8e]"></a>readEepromData</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, user_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = readEepromData &rArr; MasterReadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadExceptionsFromFlash
</UL>

<P><STRONG><a name="[2a7]"></a>ADVTIM_Reset</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2a8]"></a>ADVTIM_ReleaseReset</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2a9]"></a>TEST_TIM_Mode_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>TEST_ADVTIM_MULTICHANEEL_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>ADVTIM_PWMMODE_Config</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, user_advtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ADVTIM_PWMMODE_Config &rArr; ADVTIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_CtrlPWMOutputs
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_Cmd
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_OC4Init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_OC3Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_OC2Init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_OC1Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ab]"></a>switchPwmChannel</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>updatePWMChlDuty</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, user_advtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = updatePWMChlDuty &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedDuty
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenDuty
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueDuty
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmDuty
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolDuty
</UL>

<P><STRONG><a name="[2ac]"></a>TEST_ADVTIM_CAPTUREMODE_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2ad]"></a>TEST_ADVTIM_SINGLECAPTUREMODE_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2ae]"></a>TEST_ADVTIM_CASACADEMODE_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2af]"></a>TEST_ADVTIM_OUTPUTCOMPARE_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>TEST_ADVTIM_ONEPLUS_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2b1]"></a>TEST_ADVTIM_DEADTIME_BREAK</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2b2]"></a>TEST_ADVTIM_DEADTIME_BREAK_DEEPSLEEP_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2b3]"></a>TEST_ADVTIM_EVENT_GENERATION_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[2b4]"></a>TEST_ADVTIM_ETR_FUNCTION_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_advtime.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>initLEDStyleParams</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
</UL>

<P><STRONG><a name="[17e]"></a>setLEDFunc</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightEffectFunc
</UL>

<P><STRONG><a name="[17f]"></a>loadLedStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
</UL>

<P><STRONG><a name="[f8]"></a>lightEffectFunc</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = lightEffectFunc &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fucnPer5ms
</UL>

<P><STRONG><a name="[c3]"></a>stopLightEffect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = stopLightEffect &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemPowerDown
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[180]"></a>setFlashEffectPub</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneFireTruck
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneAmbulance
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scenePoliceAlert
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleC
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleB
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleA
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleD
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleB
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleA
</UL>

<P><STRONG><a name="[187]"></a>setGradualEffectPub</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, user_lighteffect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneLightning2
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneLightning1
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleF
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleE
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleD
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleF
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleE
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleD
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleC
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleB
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneFashRGB
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneSlowRGB
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleA
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleF
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleC
</UL>

<P><STRONG><a name="[181]"></a>set2FlashMode1StyleA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>

<P><STRONG><a name="[182]"></a>set2FlashMode1StyleB</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>

<P><STRONG><a name="[184]"></a>FallingAndRising</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FallingAndRising
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFProess
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEProess
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCProess
</UL>

<P><STRONG><a name="[185]"></a>stepByStep</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = stepByStep
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFProess
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEProess
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCProess
</UL>

<P><STRONG><a name="[183]"></a>flashMode1StyleCProess</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = flashMode1StyleCProess &rArr; stepByStep
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stepByStep
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallingAndRising
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCfunc
</UL>

<P><STRONG><a name="[30]"></a>flashMode1StyleCfunc</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = flashMode1StyleCfunc &rArr; setCoolData &rArr; setCoolDuty &rArr; IoBlueSetInput &rArr; setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCProess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[186]"></a>set2FlashMode1StyleC</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, user_lighteffect.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[188]"></a>set2FlashMode1StyleD</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = set2FlashMode1StyleD &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[18b]"></a>keepStep</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_lighteffect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFProess
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEProess
</UL>

<P><STRONG><a name="[189]"></a>flashMode1StyleEProess</STRONG> (Thumb, 560 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = flashMode1StyleEProess &rArr; stepByStep
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomUint8
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keepStep
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stepByStep
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallingAndRising
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEfunc
</UL>

<P><STRONG><a name="[31]"></a>flashMode1StyleEfunc</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = flashMode1StyleEfunc &rArr; setWarmData &rArr; setWarmDuty &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEProess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[18c]"></a>set2FlashMode1StyleE</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>

<P><STRONG><a name="[18d]"></a>flashMode1StyleFProess</STRONG> (Thumb, 578 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = flashMode1StyleFProess &rArr; stepByStep
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keepStep
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stepByStep
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallingAndRising
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleCfunc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFfunc
</UL>

<P><STRONG><a name="[32]"></a>flashMode1StyleFfunc</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = flashMode1StyleFfunc &rArr; setWarmData &rArr; setWarmDuty &rArr; IoGreenSetLow &rArr; setGreenOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFProess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[18e]"></a>set2FlashMode1StyleF</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2FlashMode1StyleF
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[2b5]"></a>userAbsUint16</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_lighteffect.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>colorAdjustGradual</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = colorAdjustGradual &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
</UL>

<P><STRONG><a name="[33]"></a>flashMode2StyleAfunc</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode2StyleAfunc &rArr; colorAdjustGradual &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>flashMode2StyleBfunc</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode2StyleBfunc &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>flashMode2StyleCfunc</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = flashMode2StyleCfunc &rArr; flashMode1StyleFProess &rArr; stepByStep
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFProess
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>flashMode2StyleDfunc</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode2StyleDfunc &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>flashMode2StyleEfunc</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode2StyleEfunc &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomUint8
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>flashMode2StyleFfunc</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode2StyleFfunc &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>flashMode3StyleDfunc</STRONG> (Thumb, 738 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode3StyleDfunc &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomUint8
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stepByStep
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>flashMode3StyleEfunc</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode3StyleEfunc &rArr; hsb2Rgb &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomUint8
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>flashMode3StyleFfunc</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flashMode3StyleFfunc &rArr; colorAdjustGradual &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[193]"></a>coolUpdateByCoe</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = coolUpdateByCoe &rArr; setCoolData &rArr; setCoolDuty &rArr; IoBlueSetInput &rArr; setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning2Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
</UL>

<P><STRONG><a name="[3c]"></a>lightning1Process</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lightning1Process &rArr; coolUpdateByCoe &rArr; setCoolData &rArr; setCoolDuty &rArr; IoBlueSetInput &rArr; setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>lightning2Process</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lightning2Process &rArr; coolUpdateByCoe &rArr; setCoolData &rArr; setCoolDuty &rArr; IoBlueSetInput &rArr; setBlueOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(.text)
</UL>
<P><STRONG><a name="[2b6]"></a>checkFlashLoopOver</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, user_lighteffect.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>set2FlashMode2StyleA</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2FlashMode2StyleA
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[195]"></a>sceneSlowRGB</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>

<P><STRONG><a name="[196]"></a>sceneFashRGB</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sceneFashRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[197]"></a>set2FlashMode2StyleB</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>

<P><STRONG><a name="[198]"></a>set2FlashMode2StyleC</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>

<P><STRONG><a name="[199]"></a>set2FlashMode2StyleD</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, user_lighteffect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>

<P><STRONG><a name="[19a]"></a>set2FlashMode2StyleE</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2FlashMode2StyleE
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[19b]"></a>set2FlashMode2StyleF</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2FlashMode2StyleF
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[19c]"></a>set2SimulatonModeStyleA</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = set2SimulatonModeStyleA &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[19d]"></a>set2SimulatonModeStyleB</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = set2SimulatonModeStyleB &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[19e]"></a>set2SimulatonModeStyleC</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = set2SimulatonModeStyleC &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[19f]"></a>set2SimulatonModeStyleD</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2SimulatonModeStyleD
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[1a0]"></a>set2SimulatonModeStyleE</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2SimulatonModeStyleE
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[1a1]"></a>set2SimulatonModeStyleF</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2SimulatonModeStyleF
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[1a2]"></a>sceneLightning1</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sceneLightning1
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[1a3]"></a>sceneLightning2</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sceneLightning2
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[1a4]"></a>scenePoliceAlert</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = scenePoliceAlert &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[1a5]"></a>sceneAmbulance</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sceneAmbulance &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[1a6]"></a>sceneFireTruck</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sceneFireTruck &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[f1]"></a>startLightEffect</STRONG> (Thumb, 284 bytes, Stack size 8 bytes, user_lighteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = startLightEffect &rArr; sceneFireTruck &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffRGBLamp &rArr; setGreenData &rArr; setGreenDuty &rArr; IoWarmSetInput &rArr; setWarmOutputLow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneFireTruck
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneAmbulance
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scenePoliceAlert
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneLightning2
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneLightning1
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleF
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleE
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleD
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleC
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleB
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleA
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleF
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleE
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneFashRGB
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleA
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleF
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleD
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode1StyleC
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffect
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
</UL>

<P><STRONG><a name="[18a]"></a>randomUint8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = randomUint8
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCountRegister
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEProess
</UL>

<P><STRONG><a name="[2b7]"></a>userAbsSubUint8</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_utils.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>generateChecksum</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, user_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = generateChecksum
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadExceptionsFromFlash
</UL>

<P><STRONG><a name="[8a]"></a>malloc</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadExceptionsFromFlash
</UL>

<P><STRONG><a name="[8c]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreExceptions2Flash
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadExceptionsFromFlash
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeEepromData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEepromData
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadExceptionsFromFlash
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2cData
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2cData
</UL>

<P><STRONG><a name="[2b8]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[2b9]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuFunction
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER_IRQHandler
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomUint8
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFProess
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNumLen
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batteryPercentDisplay
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSaturationDisplay
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBValueDisplay
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryVoltDisplay
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeTemperatureDisplay
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[2ba]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
</UL>

<P><STRONG><a name="[2bb]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemperature
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning2Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
</UL>

<P><STRONG><a name="[2bc]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorInRgbMode
</UL>

<P><STRONG><a name="[1aa]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
</UL>

<P><STRONG><a name="[1ad]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[10b]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning2Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
</UL>

<P><STRONG><a name="[1ae]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOriginalPWMData
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorInRgbMode
</UL>

<P><STRONG><a name="[1b0]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[1af]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOriginalPWMData
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorInRgbMode
</UL>

<P><STRONG><a name="[2bd]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[1b1]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[191]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
</UL>

<P><STRONG><a name="[2be]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemperature
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOriginalPWMData
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning2Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorInRgbMode
</UL>

<P><STRONG><a name="[2bf]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemHot
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemperature
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorInRgbMode
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
</UL>

<P><STRONG><a name="[2c0]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>__ARM_scalbn</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemperature
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning2Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
</UL>

<P><STRONG><a name="[2c1]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning2Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleDfunc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleCfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFfunc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEfunc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCfunc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTargeColorTempData
</UL>

<P><STRONG><a name="[1b3]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[1b2]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[e9]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleCfunc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFfunc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEfunc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCfunc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTargeColorTempData
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryVoltDisplay
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorTemperatureAdjustSlowFunc
</UL>

<P><STRONG><a name="[2c2]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[1b4]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[ee]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleDfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
</UL>

<P><STRONG><a name="[2c3]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLEDStts
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleDfunc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleCfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFfunc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEfunc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCfunc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTargeColorTempData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorTemperatureAdjustSlowFunc
</UL>

<P><STRONG><a name="[2c4]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>__ARM_scalbnf</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
</UL>

<P><STRONG><a name="[1a8]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[2c5]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[2c6]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>__Heap_Full</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[1b6]"></a>__Heap_Broken</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[43]"></a>_init_alloc</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[1b8]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[6]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[2c7]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2c8]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[1b7]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[1ba]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[1bb]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[2c9]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[2ca]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[2cb]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[4a]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1bd]"></a>__sig_exit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sig_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[1bc]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[1be]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[4e]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[1c3]"></a>__default_signal_display</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[1c4]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[2cc]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2cd]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_sysclock.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSystemHIRC
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFactoryMode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeCoolDownFunc
</UL>

<P><STRONG><a name="[e8]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleDfunc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleCfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFfunc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEfunc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCfunc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTargeColorTempData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorTemperatureAdjustSlowFunc
</UL>

<P><STRONG><a name="[1c5]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcBattVolt
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleFfunc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleEfunc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode3StyleDfunc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleFfunc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleEfunc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleDfunc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleCfunc
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleBfunc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorAdjustGradual
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleFfunc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleEfunc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode1StyleCfunc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMChlDuty
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTargeColorTempData
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryVoltDisplay
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colorTemperatureAdjustSlowFunc
</UL>

<P><STRONG><a name="[2ce]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[e4]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
</UL>

<P><STRONG><a name="[1c7]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[14e]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenDuty
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolDuty
</UL>

<P><STRONG><a name="[1c8]"></a>_frsb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
</UL>

<P><STRONG><a name="[1ca]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[62]"></a>__NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cx32l003_it.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[6c]"></a>TI2_Config</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_TIxExternalClockConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMIConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ICInit
</UL>

<P><STRONG><a name="[6a]"></a>TI1_Config</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, cx32l003_advtim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_TIxExternalClockConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_PWMIConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADVTIM_ICInit
</UL>

<P><STRONG><a name="[82]"></a>GPIO_IRQHandler</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, user_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_IRQHandler &rArr; entryNormalModeChk
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSwitchKeyPressedFlag
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPowerKeyPressedFlag
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryNormalModeChk
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOD_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_IRQHandler
</UL>

<P><STRONG><a name="[1ac]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1ab]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1c9]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[1c6]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[1c1]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
